# make an LXDE SD suitable for the GTA04
#
# creates a single partition bootable Debian image + kernel (but no boot loader)
# this works on Letux 2804, 3704 and 7004
#
# run this script on a host PC with SD-reader

[ "$SERVER" ] || export SERVER="http://download.goldelico.com/gta04/debian"
[ "$ROOTFS" ] || export ROOTFS="${SERVER}/latest-lxde.tbz"
[ "$KERNEL" ] || export KERNEL="http://download.goldelico.com/gta04/latest"
[ "$CONFIG" ] || export CONFIG="http://download.goldelico.com/gta04/latest"
[ "$DTBS" ] || export DTBS="omap3-beagle-xm.dtb omap3-beagle-xm+b2.dtb omap3-beagle-xm+b4.dtb omap3-beagle.dtb omap3-gta04.dtb omap3-gta04+b2.dtb omap3-gta04+b3.dtb omap3-neo900.dtb omap4-panda-es.dtb omap5-uevm.dtb omap5-pyra.dtb"

# $DEV should be initialized to some device, e.g. "/dev/sdc"

# create mount point(s)

mkdir -p /media/rootfs/boot

#
# my eeePC has this configuration:
#
# /dev/sda:	internal flash (debian)
# /dev/sdb:	internal SD reader
# /dev/sdc: external SD reader
# /dev/sdd: external CF reader
# /dev/sde: external ? reader

if [ "$DEV" ]
then

umount ${DEV}1

if [ "${DEV}" = "/dev/sda" ]
then
	echo "can't overwrite /dev/sda"
	exit 1
elif [ -b "$DEV" ]
then
	{
		echo ';'	# one big Linux partition
	} | sfdisk --force -D -uM $DEV
	/sbin/partprobe $DEV
	[ -b "${DEV}p1" ] && DEV=${DEV}p
	mke2fs -j -L "rootfs" ${DEV}1
else
	echo "not a block device: $DEV"
	exit 1
fi

umount ${DEV}1

fsck.ext3 -y ${DEV}1

mount ${DEV}1 /media/rootfs || exit
df

fi

# merge partition contents
(cd /media/rootfs || exit 1
# start with root file system
wget "$ROOTFS" -O - | tar xvjf -
# wipe out old configs coming from the tbz
rm -rf boot/*
rm -rf lib/modules/kernel
if [ "$KERNEL" != "none" ]
then # install a kernel
	mkdir -p boot
	( cd boot || exit 1
	wget $KERNEL/uImage
	wget $KERNEL/bootargs.scr
	for i in $DTBS
	do
		wget "$KERNEL/$i"
	done
	)
	wget $KERNEL/modules.tgz -O - | tar xvzf -
fi
# patch system configs
rm -rf root
if [ "$CONFIG" != "none" ]
then
	wget $CONFIG/config.tgz -O - | tar xvzf -
	rm -rf root/flash-nand	# no we shouldn't allow this here...
fi
)
ls -l /media/rootfs

sync
if [ "$DEV" ]
then
df
umount ${DEV}1
rmdir /media/rootfs/boot
rmdir /media/rootfs
fi
